{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","className","s","form","this","type","pattern","title","required","onChange","input","btn","Component","ContactList","contacts","onDeleteContact","list","map","id","listItem","onClick","Filter","label","placeholder","App","filter","addContact","duplicate","find","contact","alert","shortid","generate","prevState","changeFilter","getVisibleContacts","normalizedFilter","toLowerCase","includes","deleteContact","contactId","localStorage","getItem","parseContacts","JSON","parse","prevProps","console","log","setItem","stringify","VisibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a8c6f1f2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__12Gxi\",\"input\":\"Filter_input__18G6w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2ryAP\",\"btn\":\"ContactForm_btn__3NlmG\",\"input\":\"ContactForm_input__2BpPP\"};","\r\nimport React, { Component } from \"react\";\r\nimport s from './ContactForm.module.css'\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n    }\r\n\r\n    handleChange = e => {\r\n        const { name, value } = e.currentTarget;\r\n        this.setState({ [name]: value, })\r\n\r\n    };\r\n   handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.setState({ name: \"\", number: \"\" });\r\n\r\n    };\r\n   \r\n    \r\n      render() {\r\n        return (\r\n            \r\n                <form className = {s.form} onSubmit ={ this.handleSubmit}>\r\n                    <label>\r\n                        Name\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                            required\r\n                            onChange={this.handleChange}\r\n                            value={this.state.name}\r\n                            className ={s.input} />\r\n                    </label>\r\n                      <label>\r\n                        Number\r\n                        <input\r\n                            type=\"tel\"\r\n                            name=\"number\"\r\n                            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                            required\r\n                            onChange={this.handleChange}\r\n                            value={this.state.number}\r\n                            className ={s.input} />\r\n                    </label>\r\n                     <button type=\"submit\" className={s.btn}>Add contact</button>\r\n                </form>\r\n                \r\n            \r\n        )\r\n    }\r\n}\r\nexport default ContactForm","\r\nimport s from './ContactList.module.css'\r\n\r\n\r\nexport default function ContactList({ contacts, onDeleteContact }) {\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map(({ name, number, id }) => (\r\n        <li className={s.listItem} key={id}>\r\n          {`${name}: ${number}`}\r\n          <button\r\n            className={s.btn}\r\n            type=\"button\"\r\n            onClick={() => onDeleteContact(id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\n\r\n","import s from \"./Filter.module.css\";\r\n\r\nexport default function Filter({ value, onChange }) {\r\n  return (\r\n    <label className={s.label}>\r\n      Filter\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        name=\"name\"\r\n        placeholder=\"Enter some letters to search\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        value={value}\r\n        onChange={onChange}\r\n      ></input>\r\n    </label>\r\n  );\r\n}","import React, { Component } from 'react';\nimport ContactForm from './components/ContactForm';\nimport shortid from 'shortid';\nimport s from './App.module.css';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n      { id: 'id-5', name: 'Alex Baran', number: '067-21-51' },\n    ],\n    filter: '',\n  };\n\n  addContact = ({ name, number }) => {\n    let duplicate = this.state.contacts.find(contact => contact.name === name);\n\n    if (duplicate) {\n      alert('Такой контакт уже существует!');\n    } else {\n      const contact = {\n        name,\n        number,\n        id: shortid.generate(),\n      };\n\n      this.setState(prevState => ({\n        contacts: [...prevState.contacts, contact],\n      }));\n    }\n  };\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parseContacts = JSON.parse(contacts);\n    if (parseContacts) {\n      this.setState({ contacts: parseContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      console.log('Обновился стейт');\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n  // onSubmitHandler = data => {\n  //   console.log(data)\n  // }\n\n  render() {\n    const { filter } = this.state;\n    const VisibleContacts = this.getVisibleContacts();\n    return (\n      <>\n        <h1 className={s}>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n        <h2 className={s}>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={VisibleContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n\n// onSubmitData={this.onSubmitHandler}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactList_listItem__12KGB\",\"list\":\"ContactList_list__2zSjv\",\"btn\":\"ContactList_btn__3fMyj\"};"],"sourceRoot":""}